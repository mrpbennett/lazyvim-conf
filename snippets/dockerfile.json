{
  "fastapi cmd": {
    "prefix": "fastapi",
    "body": [
      "CMD [\"uvicorn\", \"src.main:app\", \"--proxy-headers\", \"--host\", \"0.0.0.0\", \"--port\", \"80\"]"
    ],
    "description": "FastAPI CMD"
  },
  "pipenv": {
    "prefix": "poetryd",
    "body": [
      "# For more information, please refer to https://aka.ms/vscode-docker-python",
      "FROM python:3-slim",
      "",
      "# Keeps Python from generating .pyc files in the container",
      "ENV PYTHONDONTWRITEBYTECODE=1",
      "",
      "# Turns off buffering for easier container logging",
      "ENV PYTHONUNBUFFERED=1",
      "# Add Poetry's bin directory to the PATH",
      "ENV PATH='/root/.local/bin:$PATH'",
      "",
      "# Update and install system dependencies",

      "RUN apt-get update && apt-get upgrade -y && \\\\ \n    apt-get install --no-install-recommends -y \\\\ \n    curl \\\\ \n    ca-certificates && \\\\ \n    curl -sSL 'https://install.python-poetry.org' | python - && \\\\ \n    poetry config virtualenvs.create false && \\\\ \n    poetry --version && \\\\ \n    apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false && \\\\ \n    apt-get clean -y && rm -rf /var/lib/apt/lists/*",

      "",
      "# Install poetry dependencies",
      "COPY poetry.lock pyproject.toml ./",
      "RUN poetry install --no-interaction --no-ansi",
      "",
      "WORKDIR /app",
      "COPY . /app",
      "",
      "# Creates a non-root user with an explicit UID and adds permission to access the /app folder",
      "# For more info, please refer to https://aka.ms/vscode-docker-python-configure-containers",
      "RUN adduser -u 5678 --disabled-password --gecos  appuser && chown -R appuser /app",
      "USER appuser",
      "",
      "# During debugging, this entry point will be overridden. For more information, please refer to https://aka.ms/vscode-docker-python-debug",
      "CMD [\"python\",\"main.py\"]"
    ],
    "description": "Poetry Dockerfile"
  }
}
